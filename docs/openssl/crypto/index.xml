<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>crypto 加解密库 on 技术的路上奔跑</title>
    <link>/docs/openssl/crypto/</link>
    <description>Recent content in crypto 加解密库 on 技术的路上奔跑</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="/docs/openssl/crypto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>X509证书</title>
      <link>/docs/openssl/crypto/X509/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/openssl/crypto/X509/</guid>
      <description>一、证书转X509结构体 # 1. PEM格式 # 接口如下，从BIO中读取X509结构体 1// 从bio读取 2X509 *PEM_read_bio_X509(BIO *out, X509 **x, pem_password_cb *cb, void *u); 3// 从fp中读取 4X509 *PEM_read_X509(FILE *out, X509 **x, pem_password_cb *cb, void *u)； 从pem格式的证书文件中读取证书信息
从bio读取 1int main(int argc, char* argv[]) { 2 BIO* b = NULL; 3 X509* pcert; 4 5 // 读取PEM格式证书文件 6 FILE* fp = fopen(&amp;#34;/home/wangyubo/work/src/local/openssl/20230418/ssl_diy/domain.crt&amp;#34;, &amp;#34;r&amp;#34;); 7 // 获取文件大小 8 fseek(fp, 0, SEEK_END); 9 auto file_size = ftell(fp); 10 rewind(fp); 11 // 分配内存 12 auto buffer = (char*)malloc(sizeof(char) * file_size); 13 if (buffer == NULL) { 14 printf(&amp;#34;内存分配失败\n&amp;#34;); 15 exit(1); 16 } 17 // 读取文件 18 fread(buffer, file_size, 1, fp); 19 // 关闭文件 20 fclose(fp); 21 22 // 转到bio中 23 if ((b = BIO_new(BIO_s_mem())) == NULL) { 24 printf(&amp;#34;内存分配失败\n&amp;#34;); 25 exit(1); 26 } 27 BIO_write(b, buffer, file_size); 28 // 从bio读取证书，X509为NULL代表里面申请内存，后面的密码回调和密码回调参数按需处理 29 pcert = PEM_read_bio_X509(b, NULL, NULL, NULL); 30 return 0; 31} 从fp中读取证书 1int main(int argc, char* argv[]) { 2 BIO* b = NULL; 3 X509* pcert; 4 5 // 读取PEM格式证书文件 6 FILE* fp = fopen(&amp;#34;/home/wangyubo/work/src/local/openssl/20230418/ssl_diy/domain.</description>
    </item>
    
  </channel>
</rss>
